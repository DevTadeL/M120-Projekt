// ------------------------------------------------------------------------------
//  <auto-generated>
//      Dieser Code wurde vom Coded UI-Test-Generator generiert.
//      Version: 15.0.0.0
//
//      In dieser Datei sind spezialisierte Klassen definiert, die in einem
//      Coded UI-Test verwendet werden.
//      In dieser Datei können die erforderlichen Anpassungen vorgenommen werden.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CreateTodo_Arrange_Act - Verwenden Sie "CreateTodo_Arrange_ActParams", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void CreateTodo_Arrange_Act()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uIItemButton = this.UITodoBookEinSchulprojWindow.UIItemButton;
            WpfEdit uIInputTxtEdit = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputTitleCustom.UIInputTxtEdit;
            WpfEdit uIInputDescriptionEdit = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputDescriptionEdit;
            WpfEdit uIInputTxtEdit1 = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputAsigneeCustom.UIInputTxtEdit;
            WpfEdit uIInputTxtEdit2 = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputPlaceCustom.UIInputTxtEdit;
            WpfEdit uIInputTxtEdit3 = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputPhoneNrCustom.UIInputTxtEdit;
            WpfButton uIErstellenButton = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIErstellenButton;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(9, 15));

            // Klicken Schaltfläche
            Mouse.Click(uIItemButton, new Point(30, 17));

            // "TestTodo" in "inputTxt" Textfeld eingeben
            uIInputTxtEdit.Text = this.CreateTodo_Arrange_ActParams.UIInputTxtEditText;

            // "{Tab}" in "inputTxt" Textfeld eingeben
            Keyboard.SendKeys(uIInputTxtEdit, this.CreateTodo_Arrange_ActParams.UIInputTxtEditSendKeys, ModifierKeys.None);

            // "Ja Beschreibung" in "inputDescription" Textfeld eingeben
            uIInputDescriptionEdit.Text = this.CreateTodo_Arrange_ActParams.UIInputDescriptionEditText;

            // Klicken "inputTxt" Textfeld
            Mouse.Click(uIInputTxtEdit1, new Point(30, 9));

            // "Bern" in "inputTxt" Textfeld eingeben
            uIInputTxtEdit2.Text = this.CreateTodo_Arrange_ActParams.UIInputTxtEditText1;

            // "079 537 11 34" in "inputTxt" Textfeld eingeben
            uIInputTxtEdit3.Text = this.CreateTodo_Arrange_ActParams.UIInputTxtEditText2;

            // Klicken "Erstellen" Schaltfläche
            Mouse.Click(uIErstellenButton, new Point(24, 12));
        }
        
        /// <summary>
        /// Todo_Assert - Verwenden Sie "Todo_AssertExpectedValues", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void Todo_Assert()
        {
            #region Variable Declarations
            WpfText uINeuesTodoerstelltText1 = this.UINeuesTodoerstellenWindow.UITodoUCCustom.UINeuesTodoerstelltText.UINeuesTodoerstelltText1;
            #endregion

            // Sicherstellen, dass die Eigenschaft 'DisplayText' von "Neues Todo erstellt!" Bezeichnung ist gleich 'Neues Todo erstellt!'
            Assert.AreEqual(this.Todo_AssertExpectedValues.UINeuesTodoerstelltText1DisplayText, uINeuesTodoerstelltText1.DisplayText, "Todo Erstellen fehlgeschlagen");

            // Sicherstellen, dass die Eigenschaft 'DisplayText' von "Neues Todo erstellt!" Bezeichnung ist gleich 'Neues Todo erstellt!'
            Assert.AreEqual(this.Todo_AssertExpectedValues.UINeuesTodoerstelltText1DisplayText1, uINeuesTodoerstelltText1.DisplayText, "Todo erstellen fehlgeschlagen");
        }
        
        /// <summary>
        /// CreateTodo_Cleanup
        /// </summary>
        public void CreateTodo_Cleanup()
        {
            #region Variable Declarations
            WpfButton uIOKButton = this.UINeuesTodoerstellenWindow.UITodoUCCustom.UIOKButton;
            WinButton uISchließenButton = this.UITodoBookEinSchulprojWindow1.UISchließenButton;
            #endregion

            // Klicken "Ok" Schaltfläche
            Mouse.Click(uIOKButton, new Point(330, 12));

            // Klicken "Schließen" Schaltfläche
            Mouse.Click(uISchließenButton, new Point(27, 29));
        }
        
        /// <summary>
        /// Create Todo Test mit Deadline
        /// </summary>
        public void CreateTodoWDate_Arrange_Act()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uIItemButton = this.UITodoBookEinSchulprojWindow.UIItemButton;
            WpfEdit uIInputTxtEdit = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputTitleCustom.UIInputTxtEdit;
            WpfEdit uIInputDescriptionEdit = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputDescriptionEdit;
            WpfEdit uIInputTxtEdit1 = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputPlaceCustom.UIInputTxtEdit;
            WpfEdit uIInputTxtEdit2 = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputPhoneNrCustom.UIInputTxtEdit;
            WpfCheckBox uICbHasDeadlineCheckBox = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UICbHasDeadlineCheckBox;
            WpfDatePicker uIDateDeadlineDatePicker = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIDateDeadlineDatePicker;
            WpfButton uIErstellenButton = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIErstellenButton;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(152, 24));

            // Klicken Schaltfläche
            Mouse.Click(uIItemButton, new Point(102, 11));

            // "TestTodo mit Datum" in "inputTxt" Textfeld eingeben
            uIInputTxtEdit.Text = this.CreateTodoWDate_Arrange_ActParams.UIInputTxtEditText;

            // "Beschreibung" in "inputDescription" Textfeld eingeben
            uIInputDescriptionEdit.Text = this.CreateTodoWDate_Arrange_ActParams.UIInputDescriptionEditText;

            // "Thun" in "inputTxt" Textfeld eingeben
            uIInputTxtEdit1.Text = this.CreateTodoWDate_Arrange_ActParams.UIInputTxtEditText1;

            // "079 " in "inputTxt" Textfeld eingeben
            uIInputTxtEdit2.Text = this.CreateTodoWDate_Arrange_ActParams.UIInputTxtEditText2;

            // "079 537 11 34" in "inputTxt" Textfeld eingeben
            uIInputTxtEdit2.Text = this.CreateTodoWDate_Arrange_ActParams.UIInputTxtEditText3;

            // "cbHasDeadline" Kontrollkästchen auswählen
            uICbHasDeadlineCheckBox.Checked = this.CreateTodoWDate_Arrange_ActParams.UICbHasDeadlineCheckBoxChecked;

            // "30-Jun-2019" in "dateDeadline" Datumsauswahl auswählen
            uIDateDeadlineDatePicker.DateAsString = this.CreateTodoWDate_Arrange_ActParams.UIDateDeadlineDatePickerDateAsString;

            // Klicken "Erstellen" Schaltfläche
            Mouse.Click(uIErstellenButton, new Point(40, 14));
        }
        
        /// <summary>
        /// CreateTodoWDate_Assert - Verwenden Sie "CreateTodoWDate_AssertExpectedValues", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void CreateTodoWDate_Assert()
        {
            #region Variable Declarations
            WpfText uINeuesTodoerstelltText1 = this.UITestTodomitDatumWindow.UITodoUCCustom.UINeuesTodoerstelltText.UINeuesTodoerstelltText1;
            #endregion

            // Sicherstellen, dass die Eigenschaft 'DisplayText' von "Neues Todo erstellt!" Bezeichnung ist gleich 'Neues Todo erstellt!'
            Assert.AreEqual(this.CreateTodoWDate_AssertExpectedValues.UINeuesTodoerstelltText1DisplayText, uINeuesTodoerstelltText1.DisplayText, "Fehler bei Todoerstellung");
        }
        
        /// <summary>
        /// CreateTodoWDate_Cleanup
        /// </summary>
        public void CreateTodoWDate_Cleanup()
        {
            #region Variable Declarations
            WpfButton uIOKButton = this.UITestTodomitDatumWindow.UITodoUCCustom.UIOKButton;
            WinButton uISchließenButton = this.UITodoBookEinSchulprojWindow1.UISchließenButton;
            #endregion

            // Klicken "Ok" Schaltfläche
            Mouse.Click(uIOKButton, new Point(270, 12));

            // Klicken "Schließen" Schaltfläche
            Mouse.Click(uISchließenButton, new Point(10, 15));
        }
        
        /// <summary>
        /// Test mit ungültiger Telefonnummer
        /// </summary>
        public void CreateTodoInvTelnr_Arrange_Act()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uIItemButton = this.UITodoBookEinSchulprojWindow.UIItemButton;
            WpfEdit uIInputTxtEdit = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputTitleCustom.UIInputTxtEdit;
            WpfEdit uIInputDescriptionEdit = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputDescriptionEdit;
            WpfText uILblErrorText = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputPlaceCustom.UILblErrorText;
            WpfEdit uIInputTxtEdit1 = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputPlaceCustom.UIInputTxtEdit;
            WpfEdit uIInputTxtEdit2 = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIInputPhoneNrCustom.UIInputTxtEdit;
            WpfButton uIErstellenButton = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIErstellenButton;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(126, 8));

            // Klicken Schaltfläche
            Mouse.Click(uIItemButton, new Point(90, 11));

            // "Todo mit falscher Tel" in "inputTxt" Textfeld eingeben
            uIInputTxtEdit.Text = this.CreateTodoInvTelnr_Arrange_ActParams.UIInputTxtEditText;

            // "Control + {Back}" in "inputTxt" Textfeld eingeben
            Keyboard.SendKeys(uIInputTxtEdit, this.CreateTodoInvTelnr_Arrange_ActParams.UIInputTxtEditSendKeys, ModifierKeys.Control);

            // "Control + {Back}" in "inputTxt" Textfeld eingeben
            Keyboard.SendKeys(uIInputTxtEdit, this.CreateTodoInvTelnr_Arrange_ActParams.UIInputTxtEditSendKeys1, ModifierKeys.Control);

            // "Todo mit ungültiger Telefonnummer" in "inputTxt" Textfeld eingeben
            uIInputTxtEdit.Text = this.CreateTodoInvTelnr_Arrange_ActParams.UIInputTxtEditText1;

            // "{Tab}" in "inputTxt" Textfeld eingeben
            Keyboard.SendKeys(uIInputTxtEdit, this.CreateTodoInvTelnr_Arrange_ActParams.UIInputTxtEditSendKeys2, ModifierKeys.None);

            // "Yup die Tee" in "inputDescription" Textfeld eingeben
            uIInputDescriptionEdit.Text = this.CreateTodoInvTelnr_Arrange_ActParams.UIInputDescriptionEditText;

            // "Yup die Telefonnummer ist ungültig!!" in "inputDescription" Textfeld eingeben
            uIInputDescriptionEdit.Text = this.CreateTodoInvTelnr_Arrange_ActParams.UIInputDescriptionEditText1;

            // Doppelklicken "lblError" Bezeichnung
            Mouse.DoubleClick(uILblErrorText, new Point(53, 4));

            // "Bern" in "inputTxt" Textfeld eingeben
            uIInputTxtEdit1.Text = this.CreateTodoInvTelnr_Arrange_ActParams.UIInputTxtEditText2;

            // "079972737" in "inputTxt" Textfeld eingeben
            uIInputTxtEdit2.Text = this.CreateTodoInvTelnr_Arrange_ActParams.UIInputTxtEditText3;

            // Klicken "Erstellen" Schaltfläche
            Mouse.Click(uIErstellenButton, new Point(89, 16));
        }
        
        /// <summary>
        /// CreateTodoInvTelnr_Assert - Verwenden Sie "CreateTodoInvTelnr_AssertExpectedValues", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void CreateTodoInvTelnr_Assert()
        {
            #region Variable Declarations
            WpfText uIUngültigeTelefonnummText1 = this.UINeuesTodoerstellenWindow.UIInputPhoneNrCustom.UIUngültigeTelefonnummText.UIUngültigeTelefonnummText1;
            #endregion

            // Sicherstellen, dass die Eigenschaft 'DisplayText' von "Ungültige Telefonnummer" Bezeichnung ist gleich 'Ungültige Telefonnummer'
            Assert.AreEqual(this.CreateTodoInvTelnr_AssertExpectedValues.UIUngültigeTelefonnummText1DisplayText, uIUngültigeTelefonnummText1.DisplayText, "Telefonnummer sollte ungültig sein");
        }
        
        /// <summary>
        /// CreateTodoInvTelnr_Cleanup
        /// </summary>
        public void CreateTodoInvTelnr_Cleanup()
        {
            #region Variable Declarations
            WpfButton uIAbbrechenButton = this.UINeuesTodoerstellenWindow.UITodoEditUCCustom.UIAbbrechenButton;
            WinButton uIJAButton = this.UIÄnderungenverwerfenWindow.UIJAWindow.UIJAButton;
            WinButton uISchließenButton = this.UITodoBookEinSchulprojWindow1.UISchließenButton;
            #endregion

            // Klicken "Abbrechen" Schaltfläche
            Mouse.Click(uIAbbrechenButton, new Point(126, 18));

            // Klicken "&Ja" Schaltfläche
            Mouse.Click(uIJAButton, new Point(67, 20));

            // Klicken "Schließen" Schaltfläche
            Mouse.Click(uISchließenButton, new Point(15, 11));
        }
        
        #region Properties
        public virtual CreateTodo_Arrange_ActParams CreateTodo_Arrange_ActParams
        {
            get
            {
                if ((this.mCreateTodo_Arrange_ActParams == null))
                {
                    this.mCreateTodo_Arrange_ActParams = new CreateTodo_Arrange_ActParams();
                }
                return this.mCreateTodo_Arrange_ActParams;
            }
        }
        
        public virtual Todo_AssertExpectedValues Todo_AssertExpectedValues
        {
            get
            {
                if ((this.mTodo_AssertExpectedValues == null))
                {
                    this.mTodo_AssertExpectedValues = new Todo_AssertExpectedValues();
                }
                return this.mTodo_AssertExpectedValues;
            }
        }
        
        public virtual CreateTodoWDate_Arrange_ActParams CreateTodoWDate_Arrange_ActParams
        {
            get
            {
                if ((this.mCreateTodoWDate_Arrange_ActParams == null))
                {
                    this.mCreateTodoWDate_Arrange_ActParams = new CreateTodoWDate_Arrange_ActParams();
                }
                return this.mCreateTodoWDate_Arrange_ActParams;
            }
        }
        
        public virtual CreateTodoWDate_AssertExpectedValues CreateTodoWDate_AssertExpectedValues
        {
            get
            {
                if ((this.mCreateTodoWDate_AssertExpectedValues == null))
                {
                    this.mCreateTodoWDate_AssertExpectedValues = new CreateTodoWDate_AssertExpectedValues();
                }
                return this.mCreateTodoWDate_AssertExpectedValues;
            }
        }
        
        public virtual CreateTodoInvTelnr_Arrange_ActParams CreateTodoInvTelnr_Arrange_ActParams
        {
            get
            {
                if ((this.mCreateTodoInvTelnr_Arrange_ActParams == null))
                {
                    this.mCreateTodoInvTelnr_Arrange_ActParams = new CreateTodoInvTelnr_Arrange_ActParams();
                }
                return this.mCreateTodoInvTelnr_Arrange_ActParams;
            }
        }
        
        public virtual CreateTodoInvTelnr_AssertExpectedValues CreateTodoInvTelnr_AssertExpectedValues
        {
            get
            {
                if ((this.mCreateTodoInvTelnr_AssertExpectedValues == null))
                {
                    this.mCreateTodoInvTelnr_AssertExpectedValues = new CreateTodoInvTelnr_AssertExpectedValues();
                }
                return this.mCreateTodoInvTelnr_AssertExpectedValues;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UITodoBookEinSchulprojWindow UITodoBookEinSchulprojWindow
        {
            get
            {
                if ((this.mUITodoBookEinSchulprojWindow == null))
                {
                    this.mUITodoBookEinSchulprojWindow = new UITodoBookEinSchulprojWindow();
                }
                return this.mUITodoBookEinSchulprojWindow;
            }
        }
        
        public UINeuesTodoerstellenWindow UINeuesTodoerstellenWindow
        {
            get
            {
                if ((this.mUINeuesTodoerstellenWindow == null))
                {
                    this.mUINeuesTodoerstellenWindow = new UINeuesTodoerstellenWindow();
                }
                return this.mUINeuesTodoerstellenWindow;
            }
        }
        
        public UITodoBookEinSchulprojWindow1 UITodoBookEinSchulprojWindow1
        {
            get
            {
                if ((this.mUITodoBookEinSchulprojWindow1 == null))
                {
                    this.mUITodoBookEinSchulprojWindow1 = new UITodoBookEinSchulprojWindow1();
                }
                return this.mUITodoBookEinSchulprojWindow1;
            }
        }
        
        public UITestTodomitDatumWindow UITestTodomitDatumWindow
        {
            get
            {
                if ((this.mUITestTodomitDatumWindow == null))
                {
                    this.mUITestTodomitDatumWindow = new UITestTodomitDatumWindow();
                }
                return this.mUITestTodomitDatumWindow;
            }
        }
        
        public UIÄnderungenverwerfenWindow UIÄnderungenverwerfenWindow
        {
            get
            {
                if ((this.mUIÄnderungenverwerfenWindow == null))
                {
                    this.mUIÄnderungenverwerfenWindow = new UIÄnderungenverwerfenWindow();
                }
                return this.mUIÄnderungenverwerfenWindow;
            }
        }
        #endregion
        
        #region Fields
        private CreateTodo_Arrange_ActParams mCreateTodo_Arrange_ActParams;
        
        private Todo_AssertExpectedValues mTodo_AssertExpectedValues;
        
        private CreateTodoWDate_Arrange_ActParams mCreateTodoWDate_Arrange_ActParams;
        
        private CreateTodoWDate_AssertExpectedValues mCreateTodoWDate_AssertExpectedValues;
        
        private CreateTodoInvTelnr_Arrange_ActParams mCreateTodoInvTelnr_Arrange_ActParams;
        
        private CreateTodoInvTelnr_AssertExpectedValues mCreateTodoInvTelnr_AssertExpectedValues;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UITodoBookEinSchulprojWindow mUITodoBookEinSchulprojWindow;
        
        private UINeuesTodoerstellenWindow mUINeuesTodoerstellenWindow;
        
        private UITodoBookEinSchulprojWindow1 mUITodoBookEinSchulprojWindow1;
        
        private UITestTodomitDatumWindow mUITestTodomitDatumWindow;
        
        private UIÄnderungenverwerfenWindow mUIÄnderungenverwerfenWindow;
        #endregion
    }
    
    /// <summary>
    /// An "CreateTodo_Arrange_Act" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class CreateTodo_Arrange_ActParams
    {
        
        #region Fields
        /// <summary>
        /// "TestTodo" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText = "TestTodo";
        
        /// <summary>
        /// "{Tab}" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditSendKeys = "{Tab}";
        
        /// <summary>
        /// "Ja Beschreibung" in "inputDescription" Textfeld eingeben
        /// </summary>
        public string UIInputDescriptionEditText = "Ja Beschreibung";
        
        /// <summary>
        /// "Bern" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText1 = "Bern";
        
        /// <summary>
        /// "079 537 11 34" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText2 = "079 537 11 34";
        #endregion
    }
    
    /// <summary>
    /// An "Todo_Assert" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class Todo_AssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Sicherstellen, dass die Eigenschaft 'DisplayText' von "Neues Todo erstellt!" Bezeichnung ist gleich 'Neues Todo erstellt!'
        /// </summary>
        public string UINeuesTodoerstelltText1DisplayText = "Neues Todo erstellt!";
        
        /// <summary>
        /// Sicherstellen, dass die Eigenschaft 'DisplayText' von "Neues Todo erstellt!" Bezeichnung ist gleich 'Neues Todo erstellt!'
        /// </summary>
        public string UINeuesTodoerstelltText1DisplayText1 = "Neues Todo erstellt!";
        #endregion
    }
    
    /// <summary>
    /// An "CreateTodoWDate_Arrange_Act" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class CreateTodoWDate_Arrange_ActParams
    {
        
        #region Fields
        /// <summary>
        /// "TestTodo mit Datum" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText = "TestTodo mit Datum";
        
        /// <summary>
        /// "Beschreibung" in "inputDescription" Textfeld eingeben
        /// </summary>
        public string UIInputDescriptionEditText = "Beschreibung";
        
        /// <summary>
        /// "Thun" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText1 = "Thun";
        
        /// <summary>
        /// "079 " in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText2 = "079 ";
        
        /// <summary>
        /// "079 537 11 34" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText3 = "079 537 11 34";
        
        /// <summary>
        /// "cbHasDeadline" Kontrollkästchen auswählen
        /// </summary>
        public bool UICbHasDeadlineCheckBoxChecked = true;
        
        /// <summary>
        /// "30-Jun-2019" in "dateDeadline" Datumsauswahl auswählen
        /// </summary>
        public string UIDateDeadlineDatePickerDateAsString = "30-Jun-2019";
        #endregion
    }
    
    /// <summary>
    /// An "CreateTodoWDate_Assert" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class CreateTodoWDate_AssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Sicherstellen, dass die Eigenschaft 'DisplayText' von "Neues Todo erstellt!" Bezeichnung ist gleich 'Neues Todo erstellt!'
        /// </summary>
        public string UINeuesTodoerstelltText1DisplayText = "Neues Todo erstellt!";
        #endregion
    }
    
    /// <summary>
    /// An "CreateTodoInvTelnr_Arrange_Act" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class CreateTodoInvTelnr_Arrange_ActParams
    {
        
        #region Fields
        /// <summary>
        /// "Todo mit falscher Tel" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText = "Todo mit falscher Tel";
        
        /// <summary>
        /// "Control + {Back}" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditSendKeys = "{Back}";
        
        /// <summary>
        /// "Control + {Back}" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditSendKeys1 = "{Back}";
        
        /// <summary>
        /// "Todo mit ungültiger Telefonnummer" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText1 = "Todo mit ungültiger Telefonnummer";
        
        /// <summary>
        /// "{Tab}" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditSendKeys2 = "{Tab}";
        
        /// <summary>
        /// "Yup die Tee" in "inputDescription" Textfeld eingeben
        /// </summary>
        public string UIInputDescriptionEditText = "Yup die Tee";
        
        /// <summary>
        /// "Yup die Telefonnummer ist ungültig!!" in "inputDescription" Textfeld eingeben
        /// </summary>
        public string UIInputDescriptionEditText1 = "Yup die Telefonnummer ist ungültig!!";
        
        /// <summary>
        /// "Bern" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText2 = "Bern";
        
        /// <summary>
        /// "079972737" in "inputTxt" Textfeld eingeben
        /// </summary>
        public string UIInputTxtEditText3 = "079972737";
        #endregion
    }
    
    /// <summary>
    /// An "CreateTodoInvTelnr_Assert" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class CreateTodoInvTelnr_AssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Sicherstellen, dass die Eigenschaft 'DisplayText' von "Ungültige Telefonnummer" Bezeichnung ist gleich 'Ungültige Telefonnummer'
        /// </summary>
        public string UIUngültigeTelefonnummText1DisplayText = "Ungültige Telefonnummer";
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Elementansicht";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIM120ProjektexeListItem UIM120ProjektexeListItem
        {
            get
            {
                if ((this.mUIM120ProjektexeListItem == null))
                {
                    this.mUIM120ProjektexeListItem = new UIM120ProjektexeListItem(this);
                }
                return this.mUIM120ProjektexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIM120ProjektexeListItem mUIM120ProjektexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIM120ProjektexeListItem : WinListItem
    {
        
        public UIM120ProjektexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinListItem.PropertyNames.Name] = "M120Projekt.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UITodoBookEinSchulprojWindow : WpfWindow
    {
        
        public UITodoBookEinSchulprojWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "TodoBook - Ein Schulprojekt von Mateusz Rüfenacht";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("TodoBook - Ein Schulprojekt von Mateusz Rüfenacht");
            #endregion
        }
        
        #region Properties
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUIItemButton.WindowTitles.Add("TodoBook - Ein Schulprojekt von Mateusz Rüfenacht");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UINeuesTodoerstellenWindow : WpfWindow
    {
        
        public UINeuesTodoerstellenWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Neues Todo erstellen";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Neues Todo erstellen");
            this.WindowTitles.Add("TestTodo");
            #endregion
        }
        
        #region Properties
        public UITodoEditUCCustom UITodoEditUCCustom
        {
            get
            {
                if ((this.mUITodoEditUCCustom == null))
                {
                    this.mUITodoEditUCCustom = new UITodoEditUCCustom(this);
                }
                return this.mUITodoEditUCCustom;
            }
        }
        
        public UITodoUCCustom UITodoUCCustom
        {
            get
            {
                if ((this.mUITodoUCCustom == null))
                {
                    this.mUITodoUCCustom = new UITodoUCCustom(this);
                }
                return this.mUITodoUCCustom;
            }
        }
        
        public UIInputPhoneNrCustom1 UIInputPhoneNrCustom
        {
            get
            {
                if ((this.mUIInputPhoneNrCustom == null))
                {
                    this.mUIInputPhoneNrCustom = new UIInputPhoneNrCustom1(this);
                }
                return this.mUIInputPhoneNrCustom;
            }
        }
        #endregion
        
        #region Fields
        private UITodoEditUCCustom mUITodoEditUCCustom;
        
        private UITodoUCCustom mUITodoUCCustom;
        
        private UIInputPhoneNrCustom1 mUIInputPhoneNrCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UITodoEditUCCustom : WpfCustom
    {
        
        public UITodoEditUCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CreateTodoUsercontrol";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "todoEditUC";
            this.WindowTitles.Add("Neues Todo erstellen");
            #endregion
        }
        
        #region Properties
        public UIInputTitleCustom UIInputTitleCustom
        {
            get
            {
                if ((this.mUIInputTitleCustom == null))
                {
                    this.mUIInputTitleCustom = new UIInputTitleCustom(this);
                }
                return this.mUIInputTitleCustom;
            }
        }
        
        public WpfEdit UIInputDescriptionEdit
        {
            get
            {
                if ((this.mUIInputDescriptionEdit == null))
                {
                    this.mUIInputDescriptionEdit = new WpfEdit(this);
                    #region Suchkriterien
                    this.mUIInputDescriptionEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "inputDescription";
                    this.mUIInputDescriptionEdit.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUIInputDescriptionEdit;
            }
        }
        
        public UIInputAsigneeCustom UIInputAsigneeCustom
        {
            get
            {
                if ((this.mUIInputAsigneeCustom == null))
                {
                    this.mUIInputAsigneeCustom = new UIInputAsigneeCustom(this);
                }
                return this.mUIInputAsigneeCustom;
            }
        }
        
        public UIInputPlaceCustom UIInputPlaceCustom
        {
            get
            {
                if ((this.mUIInputPlaceCustom == null))
                {
                    this.mUIInputPlaceCustom = new UIInputPlaceCustom(this);
                }
                return this.mUIInputPlaceCustom;
            }
        }
        
        public UIInputPhoneNrCustom UIInputPhoneNrCustom
        {
            get
            {
                if ((this.mUIInputPhoneNrCustom == null))
                {
                    this.mUIInputPhoneNrCustom = new UIInputPhoneNrCustom(this);
                }
                return this.mUIInputPhoneNrCustom;
            }
        }
        
        public WpfButton UIErstellenButton
        {
            get
            {
                if ((this.mUIErstellenButton == null))
                {
                    this.mUIErstellenButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUIErstellenButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnSaveTodo";
                    this.mUIErstellenButton.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUIErstellenButton;
            }
        }
        
        public WpfCheckBox UICbHasDeadlineCheckBox
        {
            get
            {
                if ((this.mUICbHasDeadlineCheckBox == null))
                {
                    this.mUICbHasDeadlineCheckBox = new WpfCheckBox(this);
                    #region Suchkriterien
                    this.mUICbHasDeadlineCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbHasDeadline";
                    this.mUICbHasDeadlineCheckBox.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUICbHasDeadlineCheckBox;
            }
        }
        
        public WpfDatePicker UIDateDeadlineDatePicker
        {
            get
            {
                if ((this.mUIDateDeadlineDatePicker == null))
                {
                    this.mUIDateDeadlineDatePicker = new WpfDatePicker(this);
                    #region Suchkriterien
                    this.mUIDateDeadlineDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dateDeadline";
                    this.mUIDateDeadlineDatePicker.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUIDateDeadlineDatePicker;
            }
        }
        
        public WpfButton UIAbbrechenButton
        {
            get
            {
                if ((this.mUIAbbrechenButton == null))
                {
                    this.mUIAbbrechenButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUIAbbrechenButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnCancel";
                    this.mUIAbbrechenButton.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUIAbbrechenButton;
            }
        }
        #endregion
        
        #region Fields
        private UIInputTitleCustom mUIInputTitleCustom;
        
        private WpfEdit mUIInputDescriptionEdit;
        
        private UIInputAsigneeCustom mUIInputAsigneeCustom;
        
        private UIInputPlaceCustom mUIInputPlaceCustom;
        
        private UIInputPhoneNrCustom mUIInputPhoneNrCustom;
        
        private WpfButton mUIErstellenButton;
        
        private WpfCheckBox mUICbHasDeadlineCheckBox;
        
        private WpfDatePicker mUIDateDeadlineDatePicker;
        
        private WpfButton mUIAbbrechenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIInputTitleCustom : WpfCustom
    {
        
        public UIInputTitleCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.InputRegexUC";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "inputTitle";
            this.WindowTitles.Add("Neues Todo erstellen");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIInputTxtEdit
        {
            get
            {
                if ((this.mUIInputTxtEdit == null))
                {
                    this.mUIInputTxtEdit = new WpfEdit(this);
                    #region Suchkriterien
                    this.mUIInputTxtEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "inputTxt";
                    this.mUIInputTxtEdit.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUIInputTxtEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIInputTxtEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIInputAsigneeCustom : WpfCustom
    {
        
        public UIInputAsigneeCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.InputRegexUC";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "inputAsignee";
            this.WindowTitles.Add("Neues Todo erstellen");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIInputTxtEdit
        {
            get
            {
                if ((this.mUIInputTxtEdit == null))
                {
                    this.mUIInputTxtEdit = new WpfEdit(this);
                    #region Suchkriterien
                    this.mUIInputTxtEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "inputTxt";
                    this.mUIInputTxtEdit.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUIInputTxtEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIInputTxtEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIInputPlaceCustom : WpfCustom
    {
        
        public UIInputPlaceCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.InputRegexUC";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "inputPlace";
            this.WindowTitles.Add("Neues Todo erstellen");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIInputTxtEdit
        {
            get
            {
                if ((this.mUIInputTxtEdit == null))
                {
                    this.mUIInputTxtEdit = new WpfEdit(this);
                    #region Suchkriterien
                    this.mUIInputTxtEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "inputTxt";
                    this.mUIInputTxtEdit.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUIInputTxtEdit;
            }
        }
        
        public WpfText UILblErrorText
        {
            get
            {
                if ((this.mUILblErrorText == null))
                {
                    this.mUILblErrorText = new WpfText(this);
                    #region Suchkriterien
                    this.mUILblErrorText.SearchProperties[WpfText.PropertyNames.AutomationId] = "lblError";
                    this.mUILblErrorText.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUILblErrorText;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIInputTxtEdit;
        
        private WpfText mUILblErrorText;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIInputPhoneNrCustom : WpfCustom
    {
        
        public UIInputPhoneNrCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.InputRegexUC";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "inputPhoneNr";
            this.WindowTitles.Add("Neues Todo erstellen");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIInputTxtEdit
        {
            get
            {
                if ((this.mUIInputTxtEdit == null))
                {
                    this.mUIInputTxtEdit = new WpfEdit(this);
                    #region Suchkriterien
                    this.mUIInputTxtEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "inputTxt";
                    this.mUIInputTxtEdit.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUIInputTxtEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIInputTxtEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UITodoUCCustom : WpfCustom
    {
        
        public UITodoUCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DetailsUsercontrol";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "todoUC";
            this.WindowTitles.Add("TestTodo");
            #endregion
        }
        
        #region Properties
        public UINeuesTodoerstelltText UINeuesTodoerstelltText
        {
            get
            {
                if ((this.mUINeuesTodoerstelltText == null))
                {
                    this.mUINeuesTodoerstelltText = new UINeuesTodoerstelltText(this);
                }
                return this.mUINeuesTodoerstelltText;
            }
        }
        
        public WpfButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUIOKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnClose";
                    this.mUIOKButton.WindowTitles.Add("TestTodo");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UINeuesTodoerstelltText mUINeuesTodoerstelltText;
        
        private WpfButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UINeuesTodoerstelltText : WpfText
    {
        
        public UINeuesTodoerstelltText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "lblNew";
            this.WindowTitles.Add("TestTodo");
            #endregion
        }
        
        #region Properties
        public WpfText UINeuesTodoerstelltText1
        {
            get
            {
                if ((this.mUINeuesTodoerstelltText1 == null))
                {
                    this.mUINeuesTodoerstelltText1 = new WpfText(this);
                    #region Suchkriterien
                    this.mUINeuesTodoerstelltText1.SearchProperties[WpfText.PropertyNames.Name] = "Neues Todo erstellt!";
                    this.mUINeuesTodoerstelltText1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUINeuesTodoerstelltText1.WindowTitles.Add("TestTodo");
                    #endregion
                }
                return this.mUINeuesTodoerstelltText1;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUINeuesTodoerstelltText1;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIInputPhoneNrCustom1 : WpfCustom
    {
        
        public UIInputPhoneNrCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.InputRegexUC";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "inputPhoneNr";
            this.WindowTitles.Add("Neues Todo erstellen");
            #endregion
        }
        
        #region Properties
        public UIUngültigeTelefonnummText UIUngültigeTelefonnummText
        {
            get
            {
                if ((this.mUIUngültigeTelefonnummText == null))
                {
                    this.mUIUngültigeTelefonnummText = new UIUngültigeTelefonnummText(this);
                }
                return this.mUIUngültigeTelefonnummText;
            }
        }
        #endregion
        
        #region Fields
        private UIUngültigeTelefonnummText mUIUngültigeTelefonnummText;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIUngültigeTelefonnummText : WpfText
    {
        
        public UIUngültigeTelefonnummText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "lblError";
            this.WindowTitles.Add("Neues Todo erstellen");
            #endregion
        }
        
        #region Properties
        public WpfText UIUngültigeTelefonnummText1
        {
            get
            {
                if ((this.mUIUngültigeTelefonnummText1 == null))
                {
                    this.mUIUngültigeTelefonnummText1 = new WpfText(this);
                    #region Suchkriterien
                    this.mUIUngültigeTelefonnummText1.SearchProperties[WpfText.PropertyNames.Name] = "Ungültige Telefonnummer";
                    this.mUIUngültigeTelefonnummText1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIUngültigeTelefonnummText1.WindowTitles.Add("Neues Todo erstellen");
                    #endregion
                }
                return this.mUIUngültigeTelefonnummText1;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIUngültigeTelefonnummText1;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UITodoBookEinSchulprojWindow1 : WinWindow
    {
        
        public UITodoBookEinSchulprojWindow1()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "TodoBook - Ein Schulprojekt von Mateusz Rüfenacht";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("TodoBook - Ein Schulprojekt von Mateusz Rüfenacht");
            #endregion
        }
        
        #region Properties
        public WinButton UISchließenButton
        {
            get
            {
                if ((this.mUISchließenButton == null))
                {
                    this.mUISchließenButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUISchließenButton.SearchProperties[WinButton.PropertyNames.Name] = "Schließen";
                    this.mUISchließenButton.WindowTitles.Add("TodoBook - Ein Schulprojekt von Mateusz Rüfenacht");
                    #endregion
                }
                return this.mUISchließenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISchließenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UITestTodomitDatumWindow : WpfWindow
    {
        
        public UITestTodomitDatumWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "TestTodo mit Datum";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("TestTodo mit Datum");
            #endregion
        }
        
        #region Properties
        public UITodoUCCustom1 UITodoUCCustom
        {
            get
            {
                if ((this.mUITodoUCCustom == null))
                {
                    this.mUITodoUCCustom = new UITodoUCCustom1(this);
                }
                return this.mUITodoUCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UITodoUCCustom1 mUITodoUCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UITodoUCCustom1 : WpfCustom
    {
        
        public UITodoUCCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DetailsUsercontrol";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "todoUC";
            this.WindowTitles.Add("TestTodo mit Datum");
            #endregion
        }
        
        #region Properties
        public UINeuesTodoerstelltText2 UINeuesTodoerstelltText
        {
            get
            {
                if ((this.mUINeuesTodoerstelltText == null))
                {
                    this.mUINeuesTodoerstelltText = new UINeuesTodoerstelltText2(this);
                }
                return this.mUINeuesTodoerstelltText;
            }
        }
        
        public WpfButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUIOKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnClose";
                    this.mUIOKButton.WindowTitles.Add("TestTodo mit Datum");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UINeuesTodoerstelltText2 mUINeuesTodoerstelltText;
        
        private WpfButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UINeuesTodoerstelltText2 : WpfText
    {
        
        public UINeuesTodoerstelltText2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "lblNew";
            this.WindowTitles.Add("TestTodo mit Datum");
            #endregion
        }
        
        #region Properties
        public WpfText UINeuesTodoerstelltText1
        {
            get
            {
                if ((this.mUINeuesTodoerstelltText1 == null))
                {
                    this.mUINeuesTodoerstelltText1 = new WpfText(this);
                    #region Suchkriterien
                    this.mUINeuesTodoerstelltText1.SearchProperties[WpfText.PropertyNames.Name] = "Neues Todo erstellt!";
                    this.mUINeuesTodoerstelltText1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUINeuesTodoerstelltText1.WindowTitles.Add("TestTodo mit Datum");
                    #endregion
                }
                return this.mUINeuesTodoerstelltText1;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUINeuesTodoerstelltText1;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIÄnderungenverwerfenWindow : WinWindow
    {
        
        public UIÄnderungenverwerfenWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Änderungen verwerfen";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Änderungen verwerfen");
            #endregion
        }
        
        #region Properties
        public UIJAWindow UIJAWindow
        {
            get
            {
                if ((this.mUIJAWindow == null))
                {
                    this.mUIJAWindow = new UIJAWindow(this);
                }
                return this.mUIJAWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIJAWindow mUIJAWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIJAWindow : WinWindow
    {
        
        public UIJAWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Änderungen verwerfen");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("Änderungen verwerfen");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
}
